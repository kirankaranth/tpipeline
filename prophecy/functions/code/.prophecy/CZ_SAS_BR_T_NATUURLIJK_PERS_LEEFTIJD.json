{"initCode": "\"\"\"Determine the age of a natural person based on date of birth and reference date\"\"\"\n# an init file required for the code to get compiled with date module imported\n# this makes code.py run\n\n# pylint: disable=W0611\nfrom datetime import date, datetime\n", "code": "\"\"\"Determine the age of a natural person based on date of birth and reference date\"\"\"\n\nfrom datetime import date\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.types import DoubleType\n\n# RULE_ID   : 91\n# RULE_PARMS: \"geboortedatum, referentie_dtm\"\n# PARMS_ENG : birth_date, reference_dtm,\n# + added syspeildatum for default date\n# since it is accessible in SAS, but not in Dbx\n# RULE_NAME : BR_T_NATUURLIJK_PERS_LEEFTIJD\n# RULE_ENG  : NATURAL PERSON AGE\n# RULE_CODE : \"FLOOR( (INTCK('MONTH', &geboortedatum.,COALESCE(&referentie_dtm.,&syspeildatum.))\n#             - (DAY(COALESCE(&referentie_dtm.,&syspeildatum.)) < MIN ( DAY(&geboortedatum.),\n#             DAY (INTNX ('MONTH',COALESCE(&referentie_dtm.,&syspeildatum.), 1) - 1) ) ) ) /12 )\"\n# RULE_TEXT : Bepaal leeftijd natuurlijk persoon op basis van geboortedatum en peildatum\n# text_eng  : Determine the age of a natural person based on date of birth and reference date\n# RULE_NOTE : Op basis van de geboortedatum en peildatum wordt de werkelijke leeftijd in jaren berekend\n# note_eng  : The actual age in years is calculated based on the date of birth and reference date\n# STATUS    : A\n\n\n@udf(returnType=DoubleType())\ndef cz_sas_br_t_natuurlijk_pers_leeftijd(\n    birth_date: date, reference_dtm: date, syspeildatum: date\n) -> float:\n    # pylint: disable=import-outside-toplevel\n    from dateutil.relativedelta import relativedelta\n\n    if birth_date is None:\n        return None\n\n    coalesce_expr = syspeildatum if reference_dtm is None else reference_dtm\n\n    # There have been a thoroughly translated from SAS to Python function.\n    # But I have changed it to a simple and more efficient Python one-liner.\n    return float(relativedelta(coalesce_expr, birth_date).years)\n"}