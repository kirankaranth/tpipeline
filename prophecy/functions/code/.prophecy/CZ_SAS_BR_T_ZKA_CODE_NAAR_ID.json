{"initCode": "", "code": "\"\"\" UDF \"\"\"\n\n# RULE_PARMS: BRON,KEUZELIJST,CODE\n# RULE_CODE: INPUT(PUT(STRIP(&BRON) || '|' || STRIP(&KEUZELIJST.) || '|' || STRIP(&CODE.) ,$ZKA_CODE_NAAR_ID.),8.)\n# RULE_TEXT: Bepaalt codelijst_id bij een codelijst_sleutel\n# RULE_TEXT_EN: Determines codelist_id for a codelist_key\n\n# INPUT(\n#        PUT(\n#            STRIP(&BRON) || '|' || STRIP(&KEUZELIJST.) || '|' || STRIP(&CODE.)\n#            , $ZKA_CODE_NAAR_ID.\n#            )\t,8.)\n\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.types import IntegerType\n\n\n@udf(returnType=IntegerType())\ndef cz_sas_br_t_zka_code_naar_id(bron: str, keuzelijst: str, code: str):\n    # This function concatenates\n    # result = bron.strip() + \"|\" + keuzelijst.strip() + \"|\" + code.strip()\n    # and then puts the result in\n    # $ZKA_CODE_NAAR_ID. format determined by the _ZKA_CODELIJSTTABEL job.\n    # That job makes formats based on ZKA_IL._ZKA_CODELIJSTTABEL table contents\n    raise ValueError(\"this function may not be performed in Spark, see CZINS03-1597\")\n"}