{"initCode": "", "code": "\"\"\" UDF \"\"\"\n\n# RULE_PARMS: BUSINESS_UNIT_CODE\n# RULE_NAME:  BR_BUS_UNIT_2_JUR_ENT\n# RULE_CODE:  \"case when anydigit(substr(&BUSINESS_UNIT_CODE,5,1))\n#                   then case when substr(&BUSINESS_UNIT_CODE, 1, 3) = 'CZZ'\n#                             then '0004'\n#                             when not anydigit(substr(&BUSINESS_UNIT_CODE, 3, 1))\n#                             then ''\n#                             when anydigit(substr(&BUSINESS_UNIT_CODE,2,1))\n#                             then put(input(substr(&BUSINESS_UNIT_CODE,2,2),BEST.),z4.)\n#                             else put(input(substr(&BUSINESS_UNIT_CODE,3,1), BEST.),z4.)\n#                          end\n#                    else ''\n#               end\"\n# RULE_TEXT:  Bepaal juridische entiteit code aan de hand van business unit code\n# RULE_TEXT eng: Determine legal entity code based on business unit code\n\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.types import StringType\n\n\n@udf(returnType=StringType())\ndef cz_sas_br_bus_unit_2_jur_ent(business_unit_code: str) -> str:\n    if business_unit_code is not None:\n        if len(business_unit_code) >= 5:\n            if business_unit_code[4].isdigit():\n                if business_unit_code[:3] == \"CZZ\":\n                    return \"0004\"\n                if not business_unit_code[2].isdigit():\n                    return \"\"\n                if business_unit_code[1].isdigit():\n                    business_code_part = int(business_unit_code[1:3])\n                    return f\"{business_code_part:04d}\"\n                business_code_part = int(business_unit_code[2:3])\n                return f\"{business_code_part:04d}\"\n    return \"\"\n"}