{"initCode": "\"\"\" This import is done here \nbecause when this code is assembled in Prophecy, for strange reason\nimporting datetime only in code made the pipeline crash.\nThis file is an essential part of UDF and should not be treated separately.\n\"\"\"\n\nfrom datetime import datetime  # pylint: disable = W0611\n", "code": "\"\"\" UDF \"\"\"\n\n# RULE_PARMS: SASVerwijderDatumTijd\n# RULE_NAME: setSasVerwijderDatum\n# RULE_TEXT: \"Zet SasVerwijderDatumTijd naar de nieuwe goede datumtijd.\n#       Wanneer de verwijderdatumtijd kolom leeg is, laat hij deze ook leeg.\"\n# RULE_TEXT eng: Set SasRemoveDateTime to the new correct datetime.\n#       When the removedatetime column is empty, it leaves it empty.\n\n# RULE_CODE: \"ifn (&SASVerwijderDatumTijd. = ., ., &sysProcesDatum.)\"\n# doc: IFN(logical-expression,\n# value-returned-when-true,\n# value-returned-when-false\n# <, value-returned-when-missing>)\n\nfrom datetime import datetime\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.types import TimestampType\n\n\n@udf(returnType=TimestampType())\ndef cz_sas_setsasverwijderdatum(\n    SASVerwijderDatumTijd: datetime,  # pylint: disable = C0103\n    sysprocesdatum: datetime,\n) -> datetime:\n    if SASVerwijderDatumTijd is None:\n        return None\n    return sysprocesdatum\n"}