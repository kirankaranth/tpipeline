{"initCode":"","code":"\"\"\" UDF cz_sas_br_t_continuiteitsprovisie \"\"\"\n\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.types import DoubleType\n\n\n# pylint: disable=unused-argument\n@udf(DoubleType())\ndef cz_sas_br_t_continuiteitsprovisie(\n    provisie_rgl_type_code,\n    provisie_premievrije_verz_idc,\n    provisie_regeling_pct,\n    netto_premie_bdg,\n    ingang_dtm,\n    eind_dtm,\n    jaar,\n    provisie_regeling_bdg,\n):\n    # pylint: disable=import-outside-toplevel\n    from datetime import timedelta\n\n    def calculate_days_in_month(date):\n        next_month = date.replace(day=28) + timedelta(days=4)\n        return (next_month - timedelta(days=next_month.day)).day\n\n    def intck_month(start_date, end_date):\n        return (\n            (end_date.year - start_date.year) * 12 + end_date.month - start_date.month\n        )\n\n    if (\n        provisie_rgl_type_code == \"CP\"\n        and provisie_regeling_pct > 0.0\n        and (provisie_premievrije_verz_idc == 1.0 or netto_premie_bdg > 0.005)\n    ):\n        months_between = intck_month(ingang_dtm, eind_dtm)\n        start_month_days = calculate_days_in_month(ingang_dtm)\n        end_month_days = calculate_days_in_month(eind_dtm)\n        partial_months = (\n            (start_month_days - (ingang_dtm.day - 1)) / start_month_days\n        ) - ((end_month_days - eind_dtm.day) / end_month_days)\n        return float(\n            (provisie_regeling_pct / 100)\n            * netto_premie_bdg\n            * (months_between + partial_months)\n        )\n    if (\n        provisie_rgl_type_code == \"CP\"\n        and provisie_regeling_bdg > 0.0\n        and (provisie_premievrije_verz_idc == 1.0 or netto_premie_bdg > 0.005)\n    ):\n        months_between = intck_month(ingang_dtm, eind_dtm)\n        start_month_days = calculate_days_in_month(ingang_dtm)\n        end_month_days = calculate_days_in_month(eind_dtm)\n        partial_months = (\n            (start_month_days - (ingang_dtm.day - 1)) / start_month_days\n        ) - ((end_month_days - eind_dtm.day) / end_month_days)\n        return float(provisie_regeling_bdg * (months_between + partial_months))\n    return 0.0\n"}