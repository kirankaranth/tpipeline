{"initCode":"","code":"\"\"\" UDF cz_sas_br_t_provisie_regeling_oms \"\"\"\n\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.types import StringType\nimport numpy as np\n\n\n@udf(returnType=StringType())\ndef cz_sas_br_t_provisie_regeling_oms(\n    provisie_rgl_type_code: str,\n    provisie_regeling_bdg: float,\n    provisie_regeling_pct: float,\n    provisie_premievrije_verz_idc: float,\n) -> str:\n    try:\n        if (\n            provisie_rgl_type_code == \"CP\"\n            and provisie_premievrije_verz_idc == 1\n            and provisie_regeling_bdg > 0\n        ):\n            return f\"{np.round(12 * provisie_regeling_bdg * 2) / 2:,.2f} voor alle verzekerden\".replace(\n                \".\", \",\"\n            )\n        if (\n            provisie_rgl_type_code == \"CP\"\n            and provisie_premievrije_verz_idc == 0\n            and provisie_regeling_bdg > 0\n        ):\n            return f\"{np.round(12 * provisie_regeling_bdg * 2) / 2:,.2f} voor premiebetalende verzekerden\".replace(\n                \".\", \",\"\n            )\n        if (\n            provisie_rgl_type_code == \"AP\"\n            and provisie_premievrije_verz_idc == 1\n            and provisie_regeling_bdg > 0\n        ):\n            return f\"{provisie_regeling_bdg:,.2f} voor alle verzekerden\".replace(\n                \".\", \",\"\n            )\n        if (\n            provisie_rgl_type_code == \"AP\"\n            and provisie_premievrije_verz_idc == 0\n            and provisie_regeling_bdg > 0\n        ):\n            return f\"{provisie_regeling_bdg:,.2f} voor premiebetalende verzekerden\".replace(\n                \".\", \",\"\n            )\n        if provisie_regeling_pct > 0 and (\n            np.round(provisie_regeling_pct, 1) != provisie_regeling_pct\n        ):\n            return f\"{provisie_regeling_pct:.2f}% van de premie\".replace(\".\", \",\")\n        if provisie_regeling_pct > 0:\n            return f\"{provisie_regeling_pct:.1f}% van de premie\".replace(\".\", \",\")\n        if provisie_regeling_bdg == 0 and provisie_regeling_pct == 0:\n            return \"0,0% van de premie\"\n\n        return \"\"\n\n    except Exception as e:\n        print(f\"An exception occurred: {str(e)}\")\n\n        return \"\"\n"}